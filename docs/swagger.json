{
    "swagger": "2.0",
    "info": {
        "description": "This is an example restful api writtin with go",
        "title": "Restful API with Go",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "user index",
                "produces": [
                    "application/json"
                ],
                "summary": "Index welcomes logged in user",
                "operationId": "user-index",
                "responses": {
                    "200": {
                        "description": "welcome",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Plese login or register",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "LoginController create handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns user a JWT Token if logged in successfully",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "User Cred",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Login error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Login error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Login error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Login error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/note": {
            "post": {
                "description": "NoteController Create handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new note for user",
                "operationId": "note-create",
                "parameters": [
                    {
                        "description": "note content",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "note",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "400": {
                        "description": "note create error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "note create error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/note/{id}": {
            "get": {
                "description": "NoteController Show handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "shows a note for a given ID",
                "operationId": "note-show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "note id",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "note",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "500": {
                        "description": "note show error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "NoteController Update handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update content of a note with a given ID",
                "operationId": "note-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the note to be updated",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "note",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "500": {
                        "description": "note update error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "NoteController Delete handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the note with given ID",
                "operationId": "note-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the note to be delete",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "note",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "500": {
                        "description": "note delete error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notes": {
            "get": {
                "description": "NoteController Index handler",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns all notes for user",
                "operationId": "note-index",
                "responses": {
                    "200": {
                        "description": "notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Note"
                            }
                        }
                    },
                    "500": {
                        "description": "note index error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "RegisterController create handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns user a JWT Token if user registered successfully",
                "operationId": "register",
                "parameters": [
                    {
                        "description": "User Cred",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Register error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Register error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Register error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Note": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}